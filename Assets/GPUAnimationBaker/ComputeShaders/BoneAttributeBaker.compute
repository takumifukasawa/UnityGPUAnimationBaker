#pragma kernel CSMain

struct BoneAttributes
{
    float4 BoneRow0;
    float4 BoneRow1;
    float4 BoneRow2;
};

RWTexture2D<float4> OutBones;
StructuredBuffer<BoneAttributes> InputData;

int TextureWidth;
int TextureHeight;
int ColIndex;

[numthreads(1,1,1)]
void CSMain(uint2 id : SV_DispatchThreadID)
{
    int bakeRowNum = 3;

    // i = id.x
    for (int i = 0; i < TextureWidth; i++)
    {
        int pixelIndex = id.y * TextureWidth + i;
        int rowIndex = pixelIndex % bakeRowNum;
        int dataIndex = (int)(pixelIndex / bakeRowNum);

        BoneAttributes OutputData = InputData[dataIndex];

        float2 uv = float2(i, id.y);
        float4 boneRow;

        if (rowIndex == 0)
        {
            boneRow = OutputData.BoneRow0;
        }
        else if (rowIndex == 1)
        {
            boneRow = OutputData.BoneRow1;
        }
        else if (rowIndex == 2)
        {
            boneRow = OutputData.BoneRow2;
        }
        OutBones[uv] = boneRow;
    }
}
